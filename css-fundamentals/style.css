* {
  margin: 0;
  padding: 0;
}

body {
  color: #444;
  font-family: sans-serif;
  border-top: 10px solid #1098ad;
}

.container {
  width: 800px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
}
.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  height: 80px;
}

nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
}
/*
element selector is when we use the name of the element
. -is the class selector
# -is the id selector
*/
aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  /* padding-top: 50px;
  padding-bottom: 50px; */
  padding: 50px 0;
  width: 500px;
}

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}
li:last-child {
  margin-bottom: 0;
}
/* footer p {
  font-size: 16px;
} */

/*article header p {
  font-style: italic;
}*/

#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}
/* if we need to re-use a name multiple times, then we will need to use classes for that*/

.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* ul {
  list-style: none;
} */

.related {
  list-style: none;
}

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

/* li:nth-child(even) {
  /* color: red; */
*/
/* you  can target specific number of child, ODD, EVEN -useful for tables with alternating tables*/

/* article p:first-child {
  color: red;
} */
/* first child pseudo class will not work, the first child of article will be header,
 it will not be paragraph and IT will NOT WORK 
 What actually would work is -> to check what is the correct child and use- in our example
 the last child of the article is a paragraph-> WORKS */

article P:last-child {
  color: red;
}

/*  Styling links */

/* instead of hitting the a elment in order to target the links we should use a pseudo class, u have to specify link */

a:link {
  color: #1098ad;
  text-decoration: none;
}

/* once u click a link we can make a visited  link  */
a:visited {
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

a:active {
  background-color: black;
  font-style: italic;
}

.post-img {
  width: 100%;
  height: auto;
}

/* what is important is to be the in that same order
L-V-H-A */
/* user agent stylesheet is the ''default style'' in the dev tools */

/* Resolving conflicting declarations
In order of hierarchy: first-second-third-forth
-Declarations marked !important- should not be used
-inline style(style attribute in html=> preffer to not use

-Number 1 -if selector /ID (#)-> multiple-> last selector in code applies

-Number 2 -class (.) or pseudo-class(:) -selector 

-Number 3 -element selector(p, div, li,etc)

*/

/* resolving conflicts -> you an also check selector specificity in vs code*/
/* #copyright {
  color: red;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}
/* if we remove red, bot other selectors have same speificity , so the last one in the code will be applied and it will be yellow */

/* footer p {
  color: green;
} */

/* Inheritance in CSS */
/* you an see in user agent style sheet */
